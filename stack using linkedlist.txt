#include<iostream>
using namespace std;
template <class t>

class stack{
    struct node {
        node* next;
        t item ;
    };
    node* top ,curr;
public:
    stack(){
         top = NULL;
    }
    void push (t element)
    {
        node* nodeptr = new node;
        nodeptr->item = element;
        nodeptr->next = top;
        top = nodeptr;
    }
    void pop(t& element)
    {  
        if(isEmpty()) cout << "stack empty on pop ";
        node* temp = new node;
        temp = top;
        element = top->item;
        top = top->next;
        temp->next = NULL;
        delete temp;
        
        
    }
    bool isEmpty(){
        return top == NULL;
    }
    
    void getTop(t& stackitem)
    {
        if(isEmpty()) cout << "stack empty on pop ";
        stackitem = top->item;
    }
    
    void print()
    {
        node* curr = top;
        while(curr != NULL)
        {
            cout << curr->item  << endl;
            curr = curr->next;
            
        }
    }
};


int main()
{
      stack <int> s;
      int element  = 0;
      s.push(5);
      s.push(15);
      s.push(20);
      s.pop(element);
      s.getTop(element);
      cout << element << endl;
      s.print();
      return 0;
}
